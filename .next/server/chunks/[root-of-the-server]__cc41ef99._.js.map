{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/skato/my-projects/Kuchisabishii/src/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/skato/my-projects/Kuchisabishii/src/app/api/auth/register/route.ts"],"sourcesContent":["import { createClient } from '@/lib/supabase/server'\nimport { NextRequest, NextResponse } from 'next/server'\nimport { z } from 'zod'\n\nconst registerSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  displayName: z.string().min(2, 'Display name must be at least 2 characters'),\n  firstName: z.string().min(1, 'First name is required'),\n  lastName: z.string().min(1, 'Last name is required')\n})\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    const validatedData = registerSchema.parse(body)\n    \n    const supabase = await createClient()\n    \n    // Register user with Supabase Auth\n    const { data: authData, error: authError } = await supabase.auth.signUp({\n      email: validatedData.email,\n      password: validatedData.password,\n      options: {\n        data: {\n          display_name: validatedData.displayName,\n          first_name: validatedData.firstName,\n          last_name: validatedData.lastName\n        }\n      }\n    })\n\n    if (authError) {\n      return NextResponse.json(\n        { error: authError.message },\n        { status: 400 }\n      )\n    }\n\n    if (!authData.user) {\n      return NextResponse.json(\n        { error: 'Failed to create user' },\n        { status: 400 }\n      )\n    }\n\n    // Create user profile in profiles table\n    const { error: profileError } = await supabase\n      .from('profiles')\n      .insert({\n        id: authData.user.id,\n        email: validatedData.email,\n        display_name: validatedData.displayName,\n        first_name: validatedData.firstName,\n        last_name: validatedData.lastName,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      })\n\n    if (profileError) {\n      console.error('Profile creation error:', profileError)\n      // Don't fail the registration if profile creation fails\n      // The user can still use the app\n    }\n\n    return NextResponse.json({\n      message: 'Registration successful',\n      user: {\n        id: authData.user.id,\n        email: authData.user.email,\n        displayName: validatedData.displayName\n      }\n    }, { status: 201 })\n\n  } catch (error) {\n    console.error('Registration error:', error)\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid input data', details: error.errors },\n        { status: 400 }\n      )\n    }\n\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,iBAAiB,oKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9B,OAAO,oKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,oKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,aAAa,oKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,WAAW,oKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,UAAU,oKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,gBAAgB,eAAe,KAAK,CAAC;QAE3C,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;QAElC,mCAAmC;QACnC,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;YACtE,OAAO,cAAc,KAAK;YAC1B,UAAU,cAAc,QAAQ;YAChC,SAAS;gBACP,MAAM;oBACJ,cAAc,cAAc,WAAW;oBACvC,YAAY,cAAc,SAAS;oBACnC,WAAW,cAAc,QAAQ;gBACnC;YACF;QACF;QAEA,IAAI,WAAW;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,UAAU,OAAO;YAAC,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,CAAC,SAAS,IAAI,EAAE;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,wCAAwC;QACxC,MAAM,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SACnC,IAAI,CAAC,YACL,MAAM,CAAC;YACN,IAAI,SAAS,IAAI,CAAC,EAAE;YACpB,OAAO,cAAc,KAAK;YAC1B,cAAc,cAAc,WAAW;YACvC,YAAY,cAAc,SAAS;YACnC,WAAW,cAAc,QAAQ;YACjC,YAAY,IAAI,OAAO,WAAW;YAClC,YAAY,IAAI,OAAO,WAAW;QACpC;QAEF,IAAI,cAAc;YAChB,QAAQ,KAAK,CAAC,2BAA2B;QACzC,wDAAwD;QACxD,iCAAiC;QACnC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,IAAI,SAAS,IAAI,CAAC,EAAE;gBACpB,OAAO,SAAS,IAAI,CAAC,KAAK;gBAC1B,aAAa,cAAc,WAAW;YACxC;QACF,GAAG;YAAE,QAAQ;QAAI;IAEnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QAErC,IAAI,iBAAiB,oKAAA,CAAA,IAAC,CAAC,QAAQ,EAAE;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;gBAAsB,SAAS,MAAM,MAAM;YAAC,GACrD;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}